<?xml version="1.0"?>

<!--
You should not have to edit this file
First consider editing the properties in build.properties
-->
<project name="com.amd.aparapi.jni" default="build" basedir=".">

   <!-- 
   DO NOT EDIT BELOW THIS LINE 
   -->
   <echo>OS Name:    ${os.name}</echo>
   <echo>OS Version: ${os.version}</echo>
   <echo>OS Arch:    ${os.arch}</echo>
   <echo>Java Ver:   ${java.version}</echo>

   <!-- Ideally this would be the latest version of Java but not everyone is going to have it installed -->
   <!-- Additionally we want to avoid "Class not found: javac1.8" errors from old Ant versions (i.e. Eclipse) -->
   <property name="build.compiler" value="javac1.7"/>
   <property name="ant.build.javac.source" value="1.7"/>
   <property name="ant.build.javac.target" value="1.7"/>

   <property name="amd.app.sdk.version" value="2.9-1"/>
   
   <property environment="env" />
   
   <!-- Check for AMD APP SDK -->
   <echo>
      Note: Since AMD APP SDK 2.9 you can have multiple versions installed/co-exist on same machine, 
      so AMD introduced a completely new naming convention for their installation directories
      For example C:/Program Files/AMD APP SDK/2.9-1
   </echo>

   <target name="init">
      <available property="win32.amd.app.sdk.exists" file="C:/Program Files/AMD APP SDK/${amd.app.sdk.version}" type="dir"/>
      <condition property="amd.app.sdk.dir" value="C:/Program Files/AMD APP SDK/${amd.app.sdk.version}">
         <and>
            <os family="windows" />
            <isset property="win32.amd.app.sdk.exists" />
            <not>
               <isset property="amd.app.sdk.dir" />
            </not>
         </and>
      </condition>

      <available property="win64.amd.app.sdk.exists" file="C:/Program Files (x86)/AMD APP SDK/${amd.app.sdk.version}" type="dir"/>
      <condition property="amd.app.sdk.dir" value="C:/Program Files (x86)/AMD APP SDK/${amd.app.sdk.version}">
         <and>
            <os family="windows" />
            <isset property="win64.amd.app.sdk.exists" />
            <not>
               <isset property="win32.amd.app.sdk.exists" />
            </not>
         </and>
      </condition>

      <available property="linux.amd.app.sdk.exists" file="/curr/cody/.local//AMDAPPSDK-${amd.app.sdk.version}" type="dir"/>
      <condition property="amd.app.sdk.dir" value="/curr/cody/.local/AMDAPPSDK-${amd.app.sdk.version}">
         <and>
            <os family="unix" />
            <not>
               <os family="mac" />
            </not>
            <isset property="linux.amd.app.sdk.exists" />
            <not>
               <isset property="win32.amd.app.sdk.exists" />
            </not>
            <not>
               <isset property="win64.amd.app.sdk.exists" />
            </not>
         </and>
      </condition>

      <echo message="amd.app.sdk.dir ${amd.app.sdk.dir}"/>

      <available property="linux.intel.app.sdk.exists" file="/opt/intel/opencl" type="dir"/>
      <condition property="intel.app.sdk.dir" value="/opt/intel/opencl">
         <and>
            <os family="unix" />
            <not>
               <os family="mac" />
            </not>
            <isset property="linux.intel.app.sdk.exists" />
            <not>
               <isset property="win32.amd.app.sdk.exists" />
            </not>
            <not>
               <isset property="win64.amd.app.sdk.exists" />
            </not>
         </and>
      </condition>

      <echo message=" intel.app.sdk.dir ${intel.app.sdk.dir}"/>

      <condition property="vendor.name" value="amd">
         <isset property="amd.app.sdk.dir" /> 
      </condition>

      <condition property="vendor.name" value="intel">
         <and>
            <isset property="intel.app.sdk.dir" /> 
            <not>
                <isset property="amd.app.sdk.dir" /> 
            </not>
         </and>
      </condition>

      <echo message=" vendor.name ${vendor.name}"/>
  
      <condition property="app.sdk.dir" value="${amd.app.sdk.dir}">
         <isset property="amd.app.sdk.dir" /> 
      </condition>

      <condition property="app.sdk.dir" value="${intel.app.sdk.dir}">
         <and>
            <isset property="intel.app.sdk.dir" /> 
            <not>
                <isset property="app.sdk.dir" /> 
            </not>
         </and>
      </condition>

      <echo message="app.sdk.dir ${app.sdk.dir}"/>

	  <!-- Check for Visual Studio Compiler -->
	  <!-- This needs to be in descending order to properly handle multiple installations -->
	  <available property="msvc.32.12.0.exists" file="C:/Program Files/Microsoft Visual Studio 12.0\VC\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files/Microsoft Visual Studio 12.0">
         <and>
            <os family="windows" />
            <isset property="msvc.32.12.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.64.12.0.exists" file="C:/Program Files (x86)/Microsoft Visual Studio 12.0\VC\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files (x86)/Microsoft Visual Studio 12.0">
         <and>
            <os family="windows" />
            <isset property="msvc.64.12.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>
      
	  <available property="msvc.32.11.0.exists" file="C:/Program Files/Microsoft Visual Studio 11.0\VC\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files/Microsoft Visual Studio 11.0">
         <and>
            <os family="windows" />
            <isset property="msvc.32.11.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.64.11.0.exists" file="C:/Program Files (x86)/Microsoft Visual Studio 11.0\VC\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files (x86)/Microsoft Visual Studio 11.0">
         <and>
            <os family="windows" />
            <isset property="msvc.64.11.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.32.10.0.exists" file="c:/Program Files/Microsoft Visual Studio 10.0\vc\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files/Microsoft Visual Studio 10.0">
         <and>
            <os family="windows" />
            <isset property="msvc.32.10.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.64.10.0.exists" file="c:/Program Files (x86)/Microsoft Visual Studio 10.0\vc\bin" type="dir"/>
      <condition property="msvc.dir" value="c:/Program Files (x86)/Microsoft Visual Studio 10.0">
         <and>
            <os family="windows" />
            <isset property="msvc.64.10.0.exists" />
            <not>
               <isset property="msvc.dir" />
            </not>
         </and>
      </condition>

	  <!-- Check for SDKs -->
	  <!-- This needs to be in descending order to properly handle multiple installations -->
	
      <available property="msvc.sdk.7.1A.32.exists" file="C:/Program Files/Microsoft SDKs/Windows/v7.1A" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files/Microsoft SDKs/Windows/v7.1A">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.1A.32.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.sdk.7.1A.64.exists" file="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.1A" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.1A">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.1A.64.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>
      
      <available property="msvc.sdk.7.1.32.exists" file="C:/Program Files/Microsoft SDKs/Windows/v7.1" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files/Microsoft SDKs/Windows/v7.1">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.1.32.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>

	  <available property="msvc.sdk.7.1.64.exists" file="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.1" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.1">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.1.64.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>

      <available property="msvc.sdk.7.0A.32.exists" file="C:/Program Files/Microsoft SDKs/Windows/v7.0A" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files/Microsoft SDKs/Windows/v7.0A">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.0A.32.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>

      <available property="msvc.sdk.7.0A.64.exists" file="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.0A" type="dir"/>
      <condition property="msvc.sdk.dir" value="C:/Program Files (x86)/Microsoft SDKs/Windows/v7.0A">
         <and>
            <os family="windows" />
            <isset property="msvc.sdk.7.0A.64.exists" />
            <not>
               <isset property="msvc.sdk.dir" />
            </not>
         </and>
      </condition>

      <echo message=" msvc.dir ${msvc.dir}"/>
      <echo message=" msvc.sdk.dir ${msvc.sdk.dir}"/>
   </target>

   <target name="check" depends="init">
      <fail message="Error:">
         <condition>
            <and>
               <os family="windows" />
               <isset property="msvc.dir" />
               <not>
                  <isset property="msvc.sdk.dir" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         At present msvc.dir seems to be configured but not msvc.sdk.dir
         ]]>
      </fail>

      <fail message="Error:">
         <condition>
            <and>
               <os family="windows" />
               <not>
                  <isset property="msvc.dir" />
               </not>
               <isset property="msvc.sdk.dir" />
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         At present msvc.sdk.dir seems to be configured but not msvc.dir
         ]]>
      </fail>
      
      <available file="${msvc.dir}" type="dir" property="msvc.dir.exists" />
      <available file="${msvc.sdk.dir}" type="dir" property="msvc.sdk.dir.exists" />

      <fail message="Error:">
         <condition>
            <and>
               <os family="windows" />
               <isset property="msvc.dir" />
               <not>
                  <isset property="msvc.dir.exists" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         At present msvc.dir is set (to ${msvc.dir}) but that dir does not exist
         ]]>
      </fail>
      
      <fail message="Error:">
         <condition>
            <and>
               <os family="windows" />
               <isset property="msvc.sdk.dir" />
               <not>
                  <isset property="msvc.sdk.dir.exists" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         At present msvc.sdk.dir is set (to ${msvc.sdk.dir}) but that dir does not exist
         ]]>
      </fail>
      
      <condition property="use.msvc">
         <and>
            <os family="windows" />
            <isset property="msvc.dir.exists" />
            <isset property="msvc.sdk.dir.exists" />
         </and>
      </condition>

      <condition property="use.gcc">
         <and>
            <os family="unix" />
            <not>
               <os family="mac" />
            </not>
         </and>
      </condition>

      <condition property="use.gcc_mac">
         <os family="mac" />
      </condition>

      <condition property="x86_or_x86_64" value="x86" else="x86_64">
         <or>
            <os arch="x86" />
            <os arch="i386" />
         </or>
      </condition>

      <condition property="optional.amd64.subdir" value="" else="amd64\">
         <equals arg1="${x86_or_x86_64}" arg2="x86"/>
      </condition>

      <condition property="optional.x64.subdir" value="" else="x64\">
        <equals arg1="${x86_or_x86_64}" arg2="x86"/>
      </condition>


      <condition property="optional.app.sdk.lib.subdir" value="lib\" else="lib64\">
        <equals arg1="${x86_or_x86_64}" arg2="x86"/>

     </condition>
      
      <condition property="gcc.m.value" value="32" else="64">
        <equals arg1="${x86_or_x86_64}" arg2="x86"/>
      </condition>

      <available file="${msvc.dir}\vc\bin\${optional.amd64.subdir}cl.exe" type="file" property="cl.exists" />

      <fail message="Error:">
         <condition>
            <and>
               <isset property="use.msvc" />
               <not>
                  <isset property="cl.exists" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         Could not find vc\bin\${optional.amd64.subdir}cl under configured msvc.dir. Check if msvc.dir is pointing
         to a valid Visual Studio installation
         ]]>
      </fail>

      <fail message="Error:">
         <condition>
            <and>
               <not>
                  <os family="mac" />
               </not>
               <not>
                  <isset property="app.sdk.dir" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         You need to set app.sdk.dir to point to the location where OpenCL SDK is installed
         ]]>
      </fail>
      
      <available file="${app.sdk.dir}" type="dir" property="app.sdk.dir.exists" />

      <fail message="Error:">
         <condition>
            <and>
               <not>
                  <os family="mac" />
               </not>
               <not>
                  <isset property="app.sdk.dir.exists" />
               </not>
            </and>
         </condition>
         <![CDATA[
         You will need to edit com.amd.aparapi.jni/build.xml to compile aparapi JNI code

         At present app.sdk.dir is set (to ${app.sdk.dir}) but that dir does not exist
         ]]>
      </fail>
   </target>

   <target name="clean" depends="check">
      <delete dir="include" />
      <delete dir="${basedir}/dist" />
      <!-- Legacy cleanup -->
      <delete file="libaparapi_${x86_or_x86_64}.dylib" />
      <delete file="libaparapi_${x86_or_x86_64}.so" />
      <delete file="aparapi_${x86_or_x86_64}.dll" />
      <delete file="aparapi.dll" />
      <delete file="aparapi.obj" />
      <delete file="aparapi.o" />
      <delete file="aparapi.lib" />
      <delete file="aparapi.exp" />
      <delete file="OpenCLJNI.obj" />
      <delete file="OpenCLJNI.o" />
      <delete file="Config.obj" />
      <delete file="Config.o" />
      <delete file="ProfileInfo.obj" />
      <delete file="ProfileInfo.o" />
      <delete file="ArrayBuffer.obj" />
      <delete file="ArrayBuffer.o" />
      <delete file="AparapiBuffer.obj" />
      <delete file="AparapiBuffer.o" />
      <delete file="JNIHelper.obj" />
      <delete file="JNIHelper.o" />
      <delete file="CLHelper.obj" />
      <delete file="CLHelper.o" />
      <delete file="JNIContext.obj" />
      <delete file="JNIContext.o" />
      <delete file="KernelArg.obj" />
      <delete file="KernelArg.o" />
      <delete file="Range.obj" />
      <delete file="Range.o" />
      <delete file="OpenCLArgDescriptor.obj" />
      <delete file="OpenCLArgDescriptor.o" />
      <delete file="agent.obj" />
      <delete file="agent.o" />
      <delete file="classtools.obj" />
      <delete file="classtools.o" />
      <delete file="OpenCLMem.obj" />
      <delete file="OpenCLMem.o" />
   </target>

   <target name="javah">
      <mkdir dir="include" />
      <javah classpath="..\com.amd.aparapi\classes" destdir="include" force="true">
         <class name="com.amd.aparapi.internal.jni.ConfigJNI" />
         <class name="com.amd.aparapi.internal.jni.KernelArgJNI" />
         <class name="com.amd.aparapi.internal.jni.KernelRunnerJNI" />
         <class name="com.amd.aparapi.internal.jni.OpenCLJNI" />
         <class name="com.amd.aparapi.internal.jni.RangeJNI" />
         <!-- Non-Native Classes -->
         <class name="com.amd.aparapi.Kernel"/>
         <class name="com.amd.aparapi.Range"/>
         <class name="com.amd.aparapi.Config" />
         <class name="com.amd.aparapi.device.Device" />
         <class name="com.amd.aparapi.device.OpenCLDevice" />
         <class name="com.amd.aparapi.internal.kernel.KernelRunner"/>
         <class name="com.amd.aparapi.internal.opencl.OpenCLArgDescriptor" />
         <class name="com.amd.aparapi.internal.opencl.OpenCLMem" />
      </javah>
   </target>

   <target name="gcc" if="use.gcc">
      <mkdir dir="${basedir}/dist"/>
      <echo message="linuxcc ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-m${gcc.m.value}" />
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <arg value="-I${java.home}/../include" />
         <arg value="-I${java.home}/../include/linux" />
         <arg value="-Iinclude" />
         <arg value="-I${app.sdk.dir}/include" />
         <arg value="-Isrc/cpp" />
         <arg value="-Isrc/cpp/runKernel" />
         <arg value="-Isrc/cpp/invoke" />
         <arg value="-shared" />
         <arg value="-o" />
         <arg value="${basedir}/dist/libaparapi_${x86_or_x86_64}.so" />
         <arg value="src/cpp/runKernel/Aparapi.cpp" />
         <arg value="src/cpp/runKernel/ArrayBuffer.cpp" />
         <arg value="src/cpp/runKernel/AparapiBuffer.cpp" />
         <arg value="src/cpp/runKernel/Config.cpp" />
         <arg value="src/cpp/runKernel/JNIContext.cpp" />
         <arg value="src/cpp/runKernel/KernelArg.cpp" />
         <arg value="src/cpp/runKernel/ProfileInfo.cpp" />
         <arg value="src/cpp/runKernel/Range.cpp" />
         <arg value="src/cpp/invoke/OpenCLJNI.cpp" />
         <arg value="src/cpp/invoke/OpenCLArgDescriptor.cpp" />
         <arg value="src/cpp/invoke/OpenCLMem.cpp" />
         <arg value="src/cpp/CLHelper.cpp" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/JNIHelper.cpp" />
         <arg value="src/cpp/agent.cpp" />
         <arg value="-L${app.sdk.dir}/lib/${x86_or_x86_64}" />
         <arg value="-L${app.sdk.dir}/${optional.app.sdk.lib.subdir}" />
				 <arg value="-lm" />
         <arg value="-lOpenCL" />
      </exec>
   </target>

   <target name="gcc_mac" if="use.gcc_mac">
      <mkdir dir="${basedir}/dist"/>
      <echo message="gcc ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <!-- <arg value="-fopenmp"/> -->
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <!-- JDK 6 -->
         <arg value="-I/System/Library/Frameworks/JavaVM.framework/Headers" />
         <!-- LATEST JDK 7 without JDK 6 -->
         <arg value="-I/Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home/include/" />
         <arg value="-I/Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home/include/darwin/" />
         <arg value="-Iinclude" />
         <arg value="-Isrc/cpp" />
         <arg value="-Isrc/cpp/runKernel" />
         <arg value="-Isrc/cpp/invoke" />
         <arg value="-shared" />
         <arg value="-o" />
         <arg value="${basedir}/dist/libaparapi_${x86_or_x86_64}.dylib" />
         <arg value="src/cpp/runKernel/Aparapi.cpp" />
         <arg value="src/cpp/runKernel/ArrayBuffer.cpp" />
         <arg value="src/cpp/runKernel/AparapiBuffer.cpp" />
         <arg value="src/cpp/runKernel/Config.cpp" />
         <arg value="src/cpp/runKernel/JNIContext.cpp" />
         <arg value="src/cpp/runKernel/KernelArg.cpp" />
         <arg value="src/cpp/runKernel/ProfileInfo.cpp" />
         <arg value="src/cpp/runKernel/Range.cpp" />
         <arg value="src/cpp/invoke/OpenCLJNI.cpp" />
         <arg value="src/cpp/invoke/OpenCLArgDescriptor.cpp" />
         <arg value="src/cpp/invoke/OpenCLMem.cpp" />
         <arg value="src/cpp/CLHelper.cpp" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/JNIHelper.cpp" />
         <arg value="src/cpp/agent.cpp" />
         <arg value="-framework" />
         <arg value="OpenCL" />
         <arg value="-Wno-write-strings" />
      </exec>
   </target>

   <target name="msvc" if="use.msvc">
      <mkdir dir="${basedir}\dist"/>
      <echo message="msvc ${os.arch}" />
      <exec executable="${msvc.dir}\vc\bin\${optional.amd64.subdir}cl.exe" failonerror="true">
         <env key="PATH" path="${env.PATH};${msvc.dir}\\Common7\\IDE" />
         <arg value="/nologo" />
         <arg value="/TP" />
         <arg value="/Ox" />
         <!-- <arg value="/openmp" /> -->
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <arg value="/EHsc" />
         <arg value="/I${msvc.dir}\vc\include" />
         <arg value="/I${msvc.sdk.dir}\include" />
         <arg value="/I${java.home}\..\include" />
         <arg value="/I${java.home}\..\include\win32" />
         <arg value="/Iinclude" />
	     <arg value="/I${app.sdk.dir}\include" />
         <arg value="/IC:\Program Files (x86)\Windows Kits\8.0\Include\shared" />
         <arg value="/IC:\Program Files (x86)\Windows Kits\8.0\Include\um" />
         <arg value="/Isrc/cpp" />
         <arg value="/Isrc/cpp/runKernel" />
         <arg value="/Isrc/cpp/invoke" />
         <arg value="src/cpp/runKernel/Aparapi.cpp" />
         <arg value="src/cpp/runKernel/ArrayBuffer.cpp" />
         <arg value="src/cpp/runKernel/AparapiBuffer.cpp" />
         <arg value="src/cpp/runKernel/Config.cpp" />
         <arg value="src/cpp/runKernel/JNIContext.cpp" />
         <arg value="src/cpp/runKernel/KernelArg.cpp" />
         <arg value="src/cpp/runKernel/ProfileInfo.cpp" />
         <arg value="src/cpp/runKernel/Range.cpp" />
         <arg value="src/cpp/invoke/OpenCLJNI.cpp" />
         <arg value="src/cpp/invoke/OpenCLArgDescriptor.cpp" />
         <arg value="src/cpp/invoke/OpenCLMem.cpp" />
         <arg value="src/cpp/CLHelper.cpp" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/JNIHelper.cpp" />
         <arg value="src/cpp/agent.cpp" />
         <arg value="/LD" />
         <arg value="/link" />
         <arg value="/libpath:${msvc.dir}\vc\lib\${optional.amd64.subdir}" />
         <arg value="/libpath:${msvc.sdk.dir}\lib\${optional.x64.subdir}" />
	 <arg value="/libpath:${app.sdk.dir}\lib\${x86_or_x86_64}" />
	 <arg value="/libpath:${app.sdk.dir}\${optional.app.sdk.lib.subdir}" />
         <arg value="/libpath:C:\Program Files (x86)\Windows Kits\8.0\Lib\win8\um\x64" />
         <arg value="OpenCL.lib" />
         <arg value="/out:${basedir}\dist\aparapi_${x86_or_x86_64}.dll" />
      </exec>
   </target>

   <target name="build" depends="clean, javah, msvc, gcc, gcc_mac" />

   <target name="msvc_cltest" if="use.msvc">
      <mkdir dir="${basedir}\dist"/>
      <echo message="msvc_cltest ${os.arch}" />
      <exec executable="${msvc.dir}\vc\bin\${optional.amd64.subdir}cl.exe" failonerror="true">
         <env key="PATH" path="${env.PATH};${msvc.dir}\\Common7\\IDE" />
         <arg value="/nologo" />
         <arg value="/TP" />
         <arg value="/Ox" />
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <arg value="/I${msvc.dir}\vc\include" />
         <arg value="/I${msvc.sdk.dir}\include" />
         <arg value="/I${app.sdk.dir}\include" />
         <arg value="/Isrc/cpp" />
         <arg value="/Isrc/cpp/runKernel" />
         <arg value="/Isrc/cpp/invoke" />
         <arg value="src\cpp\CLTest.cpp" />
         <arg value="/link" />
         <arg value="/libpath:${msvc.dir}\vc\lib\${optional.amd64.subdir}" />
         <arg value="/libpath:${msvc.sdk.dir}\lib\${optional.x64.subdir}" />
         <arg value="/libpath:${app.sdk.dir}\lib\${x86_or_x86_64}" />
         <arg value="/libpath:${app.sdk.dir}\${optional.app.sdk.lib.subdir}" />
         <arg value="OpenCL.lib" />
         <arg value="/out:${basedir}/dist/cltest_${x86_or_x86_64}.exe" />
      </exec>
   </target>

   <target name="mac_cltest" if="use.gcc_mac">
      <mkdir dir="${basedir}/dist"/>
      <echo message="gcc cltest ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <!-- JDK 6 -->
         <arg value="-I/System/Library/Frameworks/JavaVM.framework/Headers" />
         <!-- Latest JDK 7 without JDK 6 -->
         <arg value="-I/Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home/include/" />
         <arg value="-I/Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home/include/darwin/" />
         <arg value="-Iinclude" />
         <arg value="-Isrc/cpp" />
         <arg value="-Isrc/cpp/runKernel" />
         <arg value="-Isrc/cpp/invoke" />
         <arg value="-o" />
         <arg value="${basedir}/dist/cltest" />
         <arg value="src/cpp/CLTest.cpp" />
         <arg value="-framework" />
         <arg value="OpenCL" />
      </exec>
   </target>

   <target name="gcc_cltest" if="use.gcc">
      <mkdir dir="${basedir}/dist"/>
      <echo message="gcc cltest ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <arg value="-I${java.home}/../include" />
         <arg value="-I${java.home}/../include/linux" />
         <arg value="-I${app.sdk.dir}/include" />
         <arg value="src/cpp/cltest.cpp" />
         <arg value="-L${app.sdk.dir}/lib/${x86_or_x86_64}" />
         <arg value="-L${app.sdk.dir}/${optional.app.sdk.lib.subdir}" />
         <arg value="-lOpenCL" />
         <arg value="-o" />
         <arg value="${basedir}/cltest_${x86_or_x86_64}" />
      </exec>
  </target>

   <target name="gcc_clt" if="use.gcc">
      <mkdir dir="${basedir}/dist"/>
      <echo message="gcc cltest ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/classtoolstest.cpp" />
         <arg value="-o" />
         <arg value="${basedir}/clt" />
      </exec>
  </target>

   <target name="mac_clt" if="use.gcc_mac">
      <mkdir dir="${basedir}/dist"/>
      <echo message="gcc clt ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/classtoolstest.cpp" />
         <arg value="-o" />
         <arg value="${basedir}/clt" />
      </exec>
   </target>

   <target name="cltest" depends="check,msvc_cltest,mac_cltest,gcc_cltest" />
   <target name="clt" depends="check,gcc_clt,mac_clt" />
</project>
